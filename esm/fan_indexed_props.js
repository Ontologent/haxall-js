import * as sys from './sys.js';
const i = sys.Map.make(sys.Str.type$, sys.List.make(sys.Str.type$).typeof());
const x = (k, v) => i.set(k, sys.List.make(sys.Str.type$, v));
x("auth.mod", ["certAuthMod::CertAuthMod","ldapMod::LdapMod","samlSsoMod::SamlSsoMod"]);
x("auth.scheme", ["auth::BasicScheme","auth::Folio2Scheme","auth::HmacScheme","auth::PlaintextScheme","auth::ScramScheme","auth::XPlaintextScheme"]);
x("axon.bindings", ["hx.test.xeto testXeto::TestAxonFuncs"]);
x("compiler.bridge.java", ["compilerJava::JavaBridge"]);
x("compiler.dsl.sys::Regex", ["compiler::RegexDslPlugin"]);
x("compiler.dsl.sys::Str", ["compiler::StrDslPlugin"]);
x("conn.tool", ["classicConnExt::ModbusRegMapEditor"]);
x("def.compDefLoader", ["axon::FuncDefLoader","skyarcd::AppDefLoader","skyarcd::ExtDefLoader","skyarcd::FormatDefLoader","skyarcd::SysModDefLoader","skyarcd::TemplateDefLoader","skyarcd::ViewDefLoader"]);
x("flux.resource.sys::File", ["flux::FileResource"]);
x("flux.sideBar", ["flux::Console","flux::NavBar"]);
x("flux.view.flux::StartResource", ["flux::StartView"]);
x("flux.view.mime.image", ["flux::ImageView"]);
x("flux.view.mime.text", ["fluxText::TextEditor"]);
x("flux.view.mime.x-directory", ["flux::DirView"]);
x("fresco.tagField.snmpMibType", ["snmpExt::SnmpMibTypeField"]);
x("hx.cli", ["hx::HelpCli","hx::VersionCli","hxTools::ConvertCli","hxTools::CryptoCli","hxTools::InitCli","hxTools::StubCli","hxd::RunCli"]);
x("hxSedona.scheme", ["hxSedona::DefaultSedonaScheme"]);
x("migrate.RecMigrator", ["migrate::StandardMigrator"]);
x("nav.target", ["navMod::AnyPointNavTarget","navMod::AnyRecNavTarget","navMod::AppNavTarget","navMod::ArcNavTarget","navMod::ConnLearnNavTarget","navMod::ConnNavTarget","navMod::EquipNavTarget","navMod::FavNavTarget","navMod::FileNavTarget","navMod::FuncNavTarget","navMod::IOBinNavTarget","navMod::IODirNavTarget","navMod::IONavTarget","navMod::KpiNavTarget","navMod::MeterNavTarget","navMod::NodeNavTarget","navMod::PointNavTarget","navMod::ProjNavTarget","navMod::RateNavTarget","navMod::RuleNavTarget","navMod::RuleTuningNavTarget","navMod::ScheduleAndCalendarNavTarget","navMod::SiteNavTarget","navMod::SpaceNavTarget","navMod::SparkNavTarget","navMod::SpecNavTarget","navMod::TariffNavTarget","navMod::UserNavTarget","navMod::UserProtoNavTarget","navMod::ViewNavTarget","navMod::WeatherPointNavTarget","navMod::WeatherStationNavTarget"]);
x("ph.lib", ["alphaTestMod","arcbeam","axon","bacnet","betaTestMod","certAuth","clone","cluster","clusterAuth","conn","connTest","crypto","docker","ecobee","example","haystack","http","hx","hxApi","hxShell","hxTestA","hxTestB","hxUser","io","ldap","math","modbus","mqtt","nest","obix","obs","ocpp","opc","ph","phIct","phIoT","phScience","platform","platformNetwork","platformSerial","platformTime","point","py","rule4","samlSso","sedona","snmp","sql","task","testMod","ux","xeto","xml"]);
x("proj.ext", ["sfAhuRulesExt","sfCertExt","sfxCalculusExt","sfxDataQualityExt","sfxSignalAnalysisExt"]);
x("skyarc.ext", ["arcExt::ArcExt","arcKitExt","connExt::ConnExt","demoExt::DemoExt","energyExt::EnergyExt","energyStarExt::EnergyStarExt","eventExt::EventExt","geoExt::GeoExt","ghgExt::GhgExt","greenButtonExt::GreenButtonExt","hisExt::HisExt","hisKitExt::HisKitExt","hvacExt","jobExt::JobExt","lyricExt::LyricExt","mapExt::MapExt","mlExt::MlExt","modbusExt::ModbusExt","notifyExt::NotifyExt","provExt::ProvExt","radioThermostatExt::RadioThermostatExt","ruleExt::RuleExt","scheduleExt::ScheduleExt","sfAhuRulesExt","sfxBackupExt::SfxBackupExt","sfxCalculusExt","sfxDataQualityExt","sfxGoogleDriveExt::GDriveExt","sfxLbnlExt","sfxSignalAnalysisExt","sfxTwitterExt::TwitterExt","tariffExt::TariffExt","testConnExt::TestConnExt","testSkyarcd::TestAlphaExt","testSkyarcd::TestBadExt","testSkyarcd::TestBetaExt","testSkyarcd::TestDeltaExt","testSkyarcd::TestGammaExt","weatherExt::WeatherExt"]);
x("skyarc.lib", ["arcExt::ArcLib","connExt::ConnLib","demoExt::DemoLib","energyExt::EnergyLib","energyStarExt::EnergyStarLib","eventExt::EventLib","geoExt::GeoLib","ghgExt::GhgLib","greenButtonExt::GreenButtonLib","hisExt::HisLib","hisKitExt::HisKitLib","jobExt::JobLib","lyricExt::LyricLib","mapExt::MapLib","mlExt::MlLib","modbusExt::ModbusLib","notifyExt::NotifyLib","provExt::ProvLib","radioThermostatExt::RadioThermostatLib","ruleExt::RuleLib","scheduleExt::ScheduleLib","sfxBackupExt::SfxBackupLib","sfxGoogleDriveExt::GDriveLib","sfxTwitterExt::TwitterLib","tariffExt::TariffLib","weatherExt::WeatherLib"]);
x("skyarc.refScheme", ["skyarcd::HostRefScheme","skyarcd::ProjRefScheme","skyarcd::RecRefScheme","skyarcd::UserRefScheme"]);
x("skyspark.benchmark", ["benchmark::AxonBenchmark","benchmark::CommitBenchmark","benchmark::HisBenchmark"]);
x("sys.uriScheme.dropbox", ["dropbox::DropboxScheme"]);
x("sys.uriScheme.fan", ["sys::FanScheme"]);
x("sys.uriScheme.file", ["sys::FileScheme"]);
x("sys.uriScheme.flux", ["flux::FluxScheme"]);
x("sys.uriScheme.googledrive", ["googleDrive::GoogleDriveScheme"]);
x("testFolio.impl", ["testSkyarcd::Folio3TestImpl"]);
x("testSys.mult", ["testNative","testSys-1","testSys-2"]);
x("testSys.single", ["works!"]);
x("xeto.bindings", ["hx.control hxControl::XetoBindingLoader","hx.rule4 hxRule","hx.test.xeto testXeto::TestBindingLoader","ion ion::XetoBindingLoader","ion.axon ionAxon","ion.block ionBlock","ion.chart ionChart","ion.doc ionDoc","ion.form ionForm","ion.graphics ionGraphics","ion.inputs ionInputs","ion.map ionMap","ion.niagara ionNiagara","ion.play ionPlay","ion.table ionTable","ion.text.code ionTextCode","ion.ux ionUx"]);
sys.Env.cur().__loadIndex(i);
